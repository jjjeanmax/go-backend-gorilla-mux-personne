// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "your@mail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/countries": {
            "get": {
                "description": "Get all country",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Get all country",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "count",
                        "description": "Count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "start",
                        "description": "Start",
                        "name": "start",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/country/{country_id}": {
            "get": {
                "description": "Get country by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Get country by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CountryID",
                        "name": "country_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/create/country": {
            "post": {
                "description": "Create a new Country",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Create a new country",
                "parameters": [
                    {
                        "description": "Country Data",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CountryCreateUpdateParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/api/create/person": {
            "post": {
                "description": "Create a new Person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Create a new Person",
                "parameters": [
                    {
                        "description": "Person Data",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.PersonCreateUpdateParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/api/delete/country/{country_id}": {
            "delete": {
                "description": "Delete Country by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Delete Country",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CountryID",
                        "name": "country_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/delete/person/{person_id}": {
            "delete": {
                "description": "Delete Person by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Delete Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PersonID",
                        "name": "person_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/person/alive": {
            "get": {
                "description": "get Person Alive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "get Person Alive",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/person/country/{country_id}": {
            "get": {
                "description": "Get person provide the same country",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Get person provide the same country",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CountryID",
                        "name": "country_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/person/dead": {
            "get": {
                "description": "get Person Deaded",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "get Person deaded",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/person/{person_id}": {
            "get": {
                "description": "Get person by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Get person by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PersonID",
                        "name": "person_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/persons": {
            "get": {
                "description": "Get all persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Get all persons",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "count",
                        "description": "Count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "start",
                        "description": "Start",
                        "name": "start",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/update/country/{country_id}": {
            "put": {
                "description": "update country by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Update Country",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CountryID",
                        "name": "country_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Country Data",
                        "name": "country",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CountryCreateUpdateParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/update/person/{person_id}": {
            "put": {
                "description": "update person by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Update Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PersonID",
                        "name": "person_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Person Data",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.PersonCreateUpdateParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "main.CountryCreateUpdateParam": {
            "type": "object",
            "properties": {
                "capital": {
                    "type": "string"
                },
                "continent": {
                    "type": "string"
                },
                "name_country": {
                    "type": "string"
                }
            }
        },
        "main.PersonCreateUpdateParam": {
            "type": "object",
            "properties": {
                "birth_day": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "in_life": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Golang API Person Swagger",
	Description:      "This is an auto-generated API Docs Person.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
